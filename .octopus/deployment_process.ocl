step "Approve (Production only)" {

    action {
        action_type = "Octopus.Manual"
        environments = ["Production"]
        properties = {
            Octopus.Action.Manual.BlockConcurrentDeployments = "False"
            Octopus.Action.Manual.Instructions = "Approve production deployment of x, y and z services."
            Octopus.Action.Manual.ResponsibleTeamIds = "Octopus Managers"
        }
        worker_pool_variable = ""
    }
}

step "Update database" {

    action {
        action_type = "Octopus.AwsRunScript"
        is_disabled = true
        properties = {
            Octopus.Action.Aws.AssumeRole = "False"
            Octopus.Action.Aws.Region = "aws.region"
            Octopus.Action.AwsAccount.UseInstanceRole = "False"
            Octopus.Action.AwsAccount.Variable = "aws.account"
            Octopus.Action.RunOnServer = "true"
            Octopus.Action.Script.ScriptBody = <<-EOT
                echo "Updating database ..."
                
                # Connect to database
                
                # Execute sql script
                
                # Validate changes
            EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "Bash"
            OctopusUseBundledTooling = "False"
        }
        worker_pool = "Hosted Ubuntu"

        packages "Phoenix.database" {
            acquisition_location = "Server"
            feed = "Octopus Server (built-in)"
            package_id = "Phoenix.database"
            properties = {
                Extract = "True"
                Purpose = ""
                SelectionMode = "immediate"
            }
        }
    }
}

step "Update static assets" {

    action {
        action_type = "Octopus.AwsUploadS3"
        is_disabled = true
        properties = {
            Octopus.Action.Aws.AssumeRole = "False"
            Octopus.Action.Aws.Region = "#{aws.region}"
            Octopus.Action.Aws.S3.BucketName = "#{aws.bucket}"
            Octopus.Action.Aws.S3.PackageOptions = "{\"bucketKey\":\"\",\"bucketKeyBehaviour\":\"Filename\",\"bucketKeyPrefix\":\"my/bucket/key\",\"storageClass\":\"STANDARD\",\"cannedAcl\":\"private\",\"metadata\":[],\"tags\":[],\"variableSubstitutionPatterns\":\"**\\\\app.config\"}"
            Octopus.Action.Aws.S3.TargetMode = "EntirePackage"
            Octopus.Action.AwsAccount.UseInstanceRole = "False"
            Octopus.Action.AwsAccount.Variable = "aws.account"
            Octopus.Action.Package.DownloadOnTentacle = "False"
            Octopus.Action.Package.FeedId = "Octopus Server (built-in)"
            Octopus.Action.Package.PackageId = "Phoenix.StaticFiles"
            Octopus.Action.RunOnServer = "true"
        }
        worker_pool = "Hosted Ubuntu"

        packages {
            acquisition_location = "Server"
            feed = "Octopus Server (built-in)"
            package_id = "Phoenix.StaticFiles"
            properties = {
                SelectionMode = "immediate"
            }
        }
    }
}

step "Deploy webapp" {
    properties = {
        Octopus.Action.TargetRoles = "web"
    }

    action {
        action_type = "Octopus.TentaclePackage"
        is_disabled = true
        properties = {
            Octopus.Action.EnabledFeatures = ",Octopus.Features.ConfigurationTransforms,Octopus.Features.ConfigurationVariables"
            Octopus.Action.Package.AutomaticallyRunConfigurationTransformationFiles = "False"
            Octopus.Action.Package.AutomaticallyUpdateAppSettingsAndConnectionStrings = "True"
            Octopus.Action.Package.DownloadOnTentacle = "False"
            Octopus.Action.Package.FeedId = "Octopus Server (built-in)"
            Octopus.Action.Package.PackageId = "Phoenix.web"
        }
        worker_pool_variable = ""

        packages {
            acquisition_location = "Server"
            feed = "Octopus Server (built-in)"
            package_id = "Phoenix.web"
            properties = {
                SelectionMode = "immediate"
            }
        }
    }
}

step "Run a Script" {

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.RunOnServer = "true"
            Octopus.Action.Script.ScriptBody = "Echo \"Hello world!\""
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "Bash"
        }
        worker_pool = "Hosted Ubuntu"
    }
}